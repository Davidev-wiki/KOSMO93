package a.b.c.com.kosmo.board.controller;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.Enumeration;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.oreilly.servlet.MultipartRequest;
import com.oreilly.servlet.multipart.DefaultFileRenamePolicy;

import a.b.c.com.common.CommonUtils;
import a.b.c.com.kosmo.board.service.BoardService;
import a.b.c.com.kosmo.board.service.BoardServiceImpl;
import a.b.c.com.kosmo.board.vo.BoardVO;

/**
 * Servlet implementation class BoardController
 */
@WebServlet("/board")
public class BoardController extends HttpServlet {
	private static final long serialVersionUID = 1L;

	@SuppressWarnings("unchecked")
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub

		request.setCharacterEncoding("EUC-KR");
		response.setCharacterEncoding("EUC-KR");
		response.setContentType("text/html; charset=EUC-KR"); 
		
		// output 객체 초기화?
		PrintWriter out = response.getWriter();
		
		// 요청한 HTML에 있는 ISUD_TYPE
		String isudType = request.getParameter("ISUD_TYPE");
		
		if(isudType != null && isudType.length() > 0){
			isudType = isudType.toUpperCase();
			
			// 글 등록
			// if에서 고정된 값을 좌측에 두고
			// 변수를 우측에 두는 것이 관행이다.
			if("I".equals(isudType)){
				System.out.println("게시판 글 등록 진입_isudType : " + isudType);
			
				String saveDirectory = CommonUtils.BOARD_IMG_UPLOAD_PATH; 
				int maxPostSize = CommonUtils.BOARD_IMG_FILE_SIZE;
				String encoding = CommonUtils.BOARD_IMG_ENCODE;
				
				// getContentType()은 "인자"와 동일한 게 있으면 true/false를 반환함.
				boolean bool = request.getContentType().toLowerCase().startsWith("multipart/form-data");
				
				if(bool){
					System.out.println("게시판 글 등록 파일 업로드 루틴 bool : : " + bool);
				
					try{
						// api check
						MultipartRequest mr = new MultipartRequest(  request
																	,saveDirectory
																	,maxPostSize
																	,encoding
																	,new DefaultFileRenamePolicy());
						// 가져온 값 사용할 변수로 초기화
						String bsubject = mr.getParameter("bsubject");
						String bwriter = mr.getParameter("bwriter");
						String bpw = mr.getParameter("bpw");
						String bmemo = mr.getParameter("bmemo");
						
						// 사진 처리
						// String bphoto = mr.getParameter("bphoto");
						// 사진파일이름을 가져와서 열거타입 변수 e에 저장
						Enumeration<String> e = mr.getFileNames();
						String imgName = e.nextElement();
						String bphoto = mr.getFilesystemName(imgName);
						
						System.out.println("bsubject : " + bsubject);
						System.out.println("bwriter : " + bwriter);
						System.out.println("bpw : " + bpw);
						System.out.println("bmemo : " + bmemo);					
						System.out.println("bphoto : " + bphoto);
						
						
						// 서비스 호출
						BoardService bs = new BoardServiceImpl();
						
						BoardVO bvo = new BoardVO();
						
						bvo.setBnum("BD202109090001");
						bvo.setBsubject(bsubject);
						bvo.setBwriter(bwriter);
						bvo.setBpw(bpw);
						bvo.setBmemo(bmemo);
						bvo.setBphoto(bphoto);
						
						boolean bInsert = bs.boardInsert(bvo);
						
						if(bInsert){
							request.setAttribute("bInsert", new Boolean(bInsert));
							RequestDispatcher rd = request.getRequestDispatcher("/kosmo/board/boardInsert.jsp");
							rd.forward(request, response);
						} else{
							out.println("<script>");				
							out.println("location.href='/testKck/kck/board/board.html'");
							out.println("</script>");
						}	
						
					} catch(Exception e){
						System.out.println("게시물 등록중 에러났어요! : " + e);
					}
				}
			} // 글 등록 end
			
			// 글 전체 조회
			if("SALL".equals(isudType)){
				System.out.println("게시판 글 전체 조회 진입_isudType : " + isudType);
				
			}
			
			//글 등록 end
			// 글 조건 조회
			// 글 수정
			// 글 삭제
			
		}
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		// TODO Auto-generated method stub
		doGet(request, response);
	}

}
