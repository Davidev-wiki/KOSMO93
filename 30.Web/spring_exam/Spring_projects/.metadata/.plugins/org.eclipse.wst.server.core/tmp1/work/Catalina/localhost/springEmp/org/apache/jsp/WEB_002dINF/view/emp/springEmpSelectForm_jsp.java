/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.70
 * Generated at: 2021-10-20 13:54:27 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.emp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class springEmpSelectForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"EUC-KR\">\r\n");
      out.write("<title>EMP SELECT FORM</title>\r\n");
      out.write("<!-- \r\n");
      out.write("<link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css\">\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-1.12.4.js\"></script>\r\n");
      out.write("<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.js\"></script> \r\n");
      out.write(" -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/springEmp/calendar_datepicker/jquery-ui-1.12.1/jquery-ui.min.css\">\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-1.12.4.js\"></script>\r\n");
      out.write("<script src=\"/springEmp/calendar_datepicker/jquery-ui-1.12.1/jquery-ui.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("	$(document).ready(function(){\r\n");
      out.write("		console.log(\"데이터 조회 요청이 들어왔어요!\");\r\n");
      out.write("		\r\n");
      out.write("		$(\"#search_btn\").click(function(){\r\n");
      out.write("			alert('검색버튼 클릭! >>> 전체조회 조건검색 컨트롤러로 이동');\r\n");
      out.write("			\r\n");
      out.write("			$(\"#empSearchForm\").attr({\r\n");
      out.write("				\"method\":\"GET\",\r\n");
      out.write("				\"action\":\"springEmpSelect.k\"\r\n");
      out.write("			}).submit();\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		$(\"#startDate\").datepicker({\r\n");
      out.write("			showOn: \"button\",			\r\n");
      out.write("	        buttonImage: \"/springEmp/calendar_datepicker/images/calendar.gif\",\r\n");
      out.write("	        dateFormat: 'yy-mm-dd',\r\n");
      out.write("		    buttonImageOnly: false,\r\n");
      out.write("			buttonText: \"Select date\"\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		$(\"#endDate\").datepicker({\r\n");
      out.write("			showOn: \"button\",\r\n");
      out.write("	        buttonImage: \"/springEmp/calendar_datepicker/images/calendar.gif\",\r\n");
      out.write("	        dateFormat: 'yy-mm-dd',\r\n");
      out.write("		    buttonImageOnly: false,\r\n");
      out.write("			buttonText: \"Select date\"\r\n");
      out.write("			\r\n");
      out.write("			/*\r\n");
      out.write("				showOn: \"both\", // 버튼과 텍스트 필드 모두 캘린더를 보여준다. \r\n");
      out.write("				buttonImage: \"/application/db/jquery/images/calendar.gif\", // 버튼 이미지 \r\n");
      out.write("				buttonImageOnly: true, // 버튼에 있는 이미지만 표시한다. \r\n");
      out.write("				changeMonth: true, // 월을 바꿀수 있는 셀렉트 박스를 표시한다. \r\n");
      out.write("				changeYear: true, // 년을 바꿀 수 있는 셀렉트 박스를 표시한다. \r\n");
      out.write("				minDate: '-100y', // 현재날짜로부터 100년이전까지 년을 표시한다. \r\n");
      out.write("				nextText: '다음 달', // next 아이콘의 툴팁. \r\n");
      out.write("				prevText: '이전 달', // prev 아이콘의 툴팁. \r\n");
      out.write("				numberOfMonths: [1,1], // 한번에 얼마나 많은 월을 표시할것인가. [2,3] 일 경우, 2(행) x 3(열) = 6개의 월을 표시한다. \r\n");
      out.write("				stepMonths: 3, // next, prev 버튼을 클릭했을때 얼마나 많은 월을 이동하여 표시하는가. \r\n");
      out.write("				yearRange: 'c-100:c+10', // 년도 선택 셀렉트박스를 현재 년도에서 이전, 이후로 얼마의 범위를 표시할것인가. \r\n");
      out.write("				showButtonPanel: true, // 캘린더 하단에 버튼 패널을 표시한다. \r\n");
      out.write("				currentText: '오늘 날짜' , // 오늘 날짜로 이동하는 버튼 패널 \r\n");
      out.write("				closeText: '닫기', // 닫기 버튼 패널 \r\n");
      out.write("				dateFormat: \"yy-mm-dd\", // 텍스트 필드에 입력되는 날짜 형식. \r\n");
      out.write("				showAnim: \"slide\", //애니메이션을 적용한다. \r\n");
      out.write("				showMonthAfterYear: true , // 월, 년순의 셀렉트 박스를 년,월 순으로 바꿔준다. \r\n");
      out.write("				dayNamesMin: ['월', '화', '수', '목', '금', '토', '일'], // 요일의 한글 형식. \r\n");
      out.write("				monthNamesShort: ['1월','2월','3월','4월','5월','6월','7월','8월','9월','10월','11월','12월'] // 월의 한글 형식. \r\n");
      out.write("				yearRange: \"2010:2013\" //연도 범위\r\n");
      out.write("			*/\r\n");
      out.write("		});\r\n");
      out.write("	});\r\n");
      out.write("		\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<h3>EMP SELECT FORM</h3>\r\n");
      out.write("<hr>\r\n");
      out.write("<form name=\"empSearchForm\" id=\"empSearchForm\">\r\n");
      out.write("	<select id=\"searchFilter\" name=\"searchFilter\">\r\n");
      out.write("		<option value=\"key_00\">전체-----------</option>\r\n");
      out.write("		<option value=\"key_01\">사번</option>\r\n");
      out.write("		<option value=\"key_02\">이름</option>\r\n");
      out.write("	</select>\r\n");
      out.write("	<input type=\"text\" id=\"keyword\" name=\"keyword\" placeholder=\"검색어 입력\"><br>	\r\n");
      out.write("	<!--\r\n");
      out.write("	<input type=\"text\" id=\"startDate\" name=\"startDate\" style=\"text-align:left; width:100px; height:13px;\" placeholder=\"시작일 \"> \r\n");
      out.write("	 -->		\r\n");
      out.write("	<input type=\"text\" id=\"startDate\" name=\"startDate\" size=\"10\" placeholder=\"시작일 \">\r\n");
      out.write("	~\r\n");
      out.write("	<!-- \r\n");
      out.write("	<input type=\"text\" id=\"endDate\" name=\"endDate\" style=\"text-align:left; width:100px; height:13px;\" placeholder=\"종료일\">\r\n");
      out.write("	 -->\r\n");
      out.write("	<input type=\"text\" id=\"endDate\" name=\"endDate\" size=\"10\" placeholder=\"종료일\"><br>	\r\n");
      out.write("	<input type=\"button\" id=\"search_btn\" name=\"search_btn\" value=\"검색\">\r\n");
      out.write("	<input type=\"reset\" id=\"reset_btn\" name=\"reset_btn\" value=\"리셋\"><br>\r\n");
      out.write("</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
