package a.b.c.com.kosmo.book.controller;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Enumeration;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.oreilly.servlet.MultipartRequest;
import com.oreilly.servlet.multipart.DefaultFileRenamePolicy;

import a.b.c.com.common.CommonUtils;
import a.b.c.com.common.GetChabun;
import a.b.c.com.kosmo.board.service.BoardService;
import a.b.c.com.kosmo.board.service.BoardServiceImpl;
import a.b.c.com.kosmo.board.vo.BoardVO;

/**
 * Servlet implementation class BoardController
 */
@WebServlet("/book")
public class BookController extends HttpServlet {
	private static final long serialVersionUID = 1L;

	@SuppressWarnings("unchecked")
	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		// TODO Auto-generated method stub

		// 요청-응답 시 사용될 인코딩 타입을 세팅한다.
		request.setCharacterEncoding("EUC-KR");
		response.setCharacterEncoding("EUC-KR");

		// 응답시 사용되는 콘텐츠 타입과 인코딩 방식을 설정한다.
		response.setContentType("text/html; charset=EUC-KR");

		// PrintWriter API를 이용해 output에 응답할 사항을 적는다?
		// out.println에 사용되는 참조변수인가?
		PrintWriter out = response.getWriter();

		// 요청시 isudtype이라는 이름에 대한 값을
		// isudtype 변수에 담는다.
		String isudtype = request.getParameter("isudtype");

		// 해당 isudtype의 데이터의 문자를 대문자로 변경한다.
		if (isudtype != null)
			isudtype.toUpperCase();

		// 널 체크
		if (isudtype != null && isudtype.length() > 0) {

			System.out.println("데이터 요청에 입력된 isudtype 출력 값 : " + isudtype);
			System.out.println("데이터 요청에 입력된 remoteIP 출력 값 : " + request.getRemoteAddr());
			System.out.println("데이터 요청에 입력된 method 출력 값 : " + request.getMethod());

			// 도서 등록 (버튼이 눌린 경우)
			if ("I".equals(isudtype)) {
				System.out.println("도서 정보 등록 요청 isudtype : " + isudtype);
				
				
				/*
				 * 전달할 변수 초기화하기
				 * VO클래스 참조하기
				 
				  	private String bnum;
					private String btitle;
					private String bauth;
					private String isbn;
					private String bcomp;
					private String bcover;
					private String bqty;
					private String bprice;
					private String deleteyn;
					private String insertdate;
					private String updatedate;
				*/
				
		  		String bnum = "";
				String btitle = "";
				String bauth = "";
				String isbn = "";
				String bcomp = "";
				String bcover = "";
				String bqty = "";
				String bprice = "";
				
				
				
				/*
				 	POST 방식에서 request.getParameter()메서드를
					WAS에서 알아서 처리할 수 있도록 되어있는 이유는
					
	form에서 method가 POST방식일 때는 
	디폴트값으로 enctype="application/x-www-form-urlencoded" 옵션이 설정 되어있기 때문에
		
					이를 WAS에서 인식하고 알아서 in/output방식으로 데이터를 처리하기 때문입니다.
					따라서. 
					
					이미지를 위해서 전송하는 경우 enctype가 Multipart로 설정해야하기 때문에				
					request.getParameter()로 데이터를 불러올 수 없게 됩니다.
				*/
				
				
				// 요청된 내용에서 콘텐츠 타입을 가져오는데,
				// 소문자로 바꿔서 가져오고, 
				// multipart/form-data 포맷을 사용해 
				// 이미지를 전송받을 수 있도록 한다.
				// book.html에서 이미 POST method이지만 
				// enctype을 multipart/form-data 로 했는데
				// 왜 굳이 또 적었나?
				// 여기서 파일이 있는 경우가 true인가???
				boolean fileUploadBool = request.getContentType().toLowerCase().startsWith("multipart/form-data");
				System.out.println("fileUploadBool 확인용 : " + fileUploadBool);
				
				if(fileUploadBool)
				
			}

			// 도서 정보 전체 조회
			// 데이터 요청시 입력된 isudtype의 값이 "SALL"인 경우
			if ("SALL".equals(isudtype)) {
			}

			// 도서 정보 조건 조회 ('S' or 'U' or 'D')
			// 데이터 요청시 입력된 isudtype의 값이 "SALL"인 경우
			if ("S".equals(isudtype) || "U".equals(isudtype) || "D".equals(isudtype)) {
			}

			// 도서 수정 (버튼이 눌린 경우 실행되는 로직)
			if ("UOK".equals(isudtype)) {
			}

			// 도서 삭제 (버튼이 눌린 경우 실행되는 로직)
			if ("DOK".equals(isudtype)) {
			}

		} else {
			// null or length == 0일 때 출력될 문장.
			System.out.println("요청시 입력된 데이터가 없습니다.");
		}
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		// TODO Auto-generated method stub
		doGet(request, response);
	}

}
