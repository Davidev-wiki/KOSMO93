package a.b.c.ch9.kckmem;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.Scanner;

import a.b.c.ch9.kck.vo.KckMemberVO2;
import a.b.c.ch9.kckmem.sql.KckMemberSqlMap;
import a.b.c.common.KckConnProperty2;

public class KckMember2 {

	// 전체 조회 함수 
	public ArrayList<KckMemberVO2> kmemSelectAll() {
		System.out.println("KckMember2.kmemSelectAll() 함수 진입 ");
		
		Connection conn = null;
		PreparedStatement pstmt = null;
		ResultSet rsRs = null;
		
		ArrayList<KckMemberVO2> aList = null;
		
		try {
			
			conn = KckConnProperty2.getConnection();
			pstmt = conn.prepareStatement(KckMemberSqlMap.getKckMemberSelectAllQuery());
			System.out.println("전체조회 \n" + KckMemberSqlMap.getKckMemberSelectAllQuery());
			
			rsRs = pstmt.executeQuery();			
						
			if (rsRs !=null) {
				
				aList = new ArrayList<KckMemberVO2>();
				
				while (rsRs.next()) {
					
					KckMemberVO2 kvo = new KckMemberVO2();
					kvo.setKnum(rsRs.getString(1));
					kvo.setKname(rsRs.getString(2));
					kvo.setKid(rsRs.getString(3));
					kvo.setKpw(rsRs.getString(4));
					kvo.setKbirth(rsRs.getString(5));
					kvo.setKgender(rsRs.getString(6));
					kvo.setKtel(rsRs.getString(7));
					kvo.setKhp(rsRs.getString(8));
					kvo.setKemail(rsRs.getString(9));
					kvo.setKaddr(rsRs.getString(10));
					kvo.setKhobby(rsRs.getString(11));
					kvo.setKphoto(rsRs.getString(12));
					kvo.setKskill(rsRs.getString(13));
					kvo.setKjob(rsRs.getString(14));
					kvo.setDeleteyn(rsRs.getString(15));
					kvo.setInsertdate(rsRs.getString(16));
					kvo.setUpdatedate(rsRs.getString(17));
										
					aList.add(kvo);
				}				
			}
		}catch(Exception e) {
			System.out.println("hmemSelectAll() 함수에서 디비연결 또는 쿼리에서 문제가 생겼네요 >>> : " + e.getMessage());
		}
		
		return aList;
	}
	
	// 전체 조건 함수 
	public ArrayList<KckMemberVO2> hmemSelect(KckMemberVO2 kvo) {
		System.out.println("KckMember.hmemSelect() 함수 진입 ");
		KckMemberVO2.printlnKckMemberVO(kvo);
		
		Connection conn = null;
		PreparedStatement pstmt = null;
		ResultSet rsRs = null;
		
		ArrayList<KckMemberVO2> aList = null;
		
		try {
			
			conn = KckConnProperty2.getConnection();
			pstmt = conn.prepareStatement(KckMemberSqlMap.getKckMemberSelectQuery());
			System.out.println("조건조회 \n" + KckMemberSqlMap.getKckMemberSelectQuery());
			
			pstmt.clearParameters();
			// 
			pstmt.setString(1, kvo.getKnum());
			rsRs = pstmt.executeQuery();			
						
			if (rsRs !=null) {
				
				aList = new ArrayList<KckMemberVO2>();
				
				while (rsRs.next()) {
					
					KckMemberVO2 _kvo = new KckMemberVO2();
					_kvo.setKnum(rsRs.getString(1));
					_kvo.setKname(rsRs.getString(2));
					_kvo.setKid(rsRs.getString(3));
					_kvo.setKpw(rsRs.getString(4));
					_kvo.setKbirth(rsRs.getString(5));
					_kvo.setKgender(rsRs.getString(6));
					_kvo.setKtel(rsRs.getString(7));
					_kvo.setKhp(rsRs.getString(8));
					_kvo.setKemail(rsRs.getString(9));
					_kvo.setKaddr(rsRs.getString(10));
					_kvo.setKhobby(rsRs.getString(11));
					_kvo.setKphoto(rsRs.getString(12));
					_kvo.setKskill(rsRs.getString(13));
					_kvo.setKjob(rsRs.getString(14));
					_kvo.setDeleteyn(rsRs.getString(15));
					_kvo.setInsertdate(rsRs.getString(16));
					_kvo.setUpdatedate(rsRs.getString(17));
										
					aList.add(_kvo);
				}				
			}
		}catch(Exception e) {
			System.out.println("hmemSelect() 함수에서 디비연결 또는 쿼리에서 문제가 생겼네요 >>> : " + e.getMessage());
		}
		
		return aList;
	}

	
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		System.out.println("회원정보 CRUD::ISUD 테스트 >>> : ");		
		

		Scanner sc = new Scanner(System.in);
		
		while (true) {
			
			System.out.println("\n\n회원정보 전체조회:SA, 조건조회:S, 등록:I, 수정:U, 삭제:D, 종료:Q");
			
			String isud = sc.next().toUpperCase();
			
			if ("Q".equals(isud)) break;
			
			if ("SA".equals(isud)) {
				System.out.println("회원정보 전체조회 >>> : " + isud);
				
				KckMember km = new KckMember();
				
				ArrayList<KckMemberVO2> aList = km.kmemSelectAll();

				if (aList !=null && aList.size() > 0) {
					for (int i=0; i < aList.size(); i++) {
						
						KckMemberVO kvo = aList.get(i);
						KckMemberVO.printKckMemberVO(kvo);
					}		
				}else {
					System.out.println("aList 에 데이터가 없네요 >>> : " + aList);
				}
			}
			if ("S".equals(isud)) {
				System.out.println("회원정보 조건조회 >>> : " + isud);
				
				System.out.println("조회조건 회원번호를 입력하시오 >>> : ");
				Scanner scs = new Scanner(System.in);
				String knum = scs.next();
				
				KckMember km = new KckMember();
				
				KckMemberVO2 kvo = null;
				kvo = new KckMemberVO2();
				kvo.setKnum(knum);
				
				ArrayList<KckMemberVO2> aList = km.kmemSelect(kvo);

				if (aList !=null && aList.size() > 0) {
					for (int i=0; i < aList.size(); i++) {
						
						KckMemberVO2 kvo = aList.get(i);
						KckMemberVO2.printKckMemberVO2(kvo);
					}		
				}else {
					System.out.println("aList 에 데이터가 없네요 >>> : " + aList);
				}	
			}
			if ("I".equals(isud)) {
				System.out.println("회원정보 등록 >>> : " + isud);	
			}
			if ("U".equals(isud)) {
				System.out.println("회원정보 수정 >>> : " + isud);
			}
			if ("D".equals(isud)) {
				System.out.println("회원정보 삭제 >>> : " + isud);
			}				
		}
	}
}